{"version":3,"sources":["crossword.js","Board.jsx","CluesList.jsx","Gamebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["clueParsing","clues","index","width","height","entry","$","row","parseInt","n","col","Crossword","data","reference","guesses","clueMap","cursorX","cursorY","direction","cluesDown","cluesAcross","corrects","total","title","crossword","this","Title","v","Width","Height","parsedAcross","Object","keys","across","map","a","parsedDown","down","forEach","clue","cn","i","j","push","start","length","c","isStart","r","x","y","inner","newX","newY","setCursor","_movement","right","left","up","isComplete","inc","currClue","currentClue","indices","currClueIndex","findIndex","nextClue","completion","_isWordCompleted","changeDirection","firstClue","lastClue","_nextWord","char","shiftKey","toUpperCase","isAlpha","test","prevWord","nextWord","_updateGuess","isBeginningOfWord","prev","currRange","currentWordRange","currCharPos","step","mapping","firstKey","lastKey","split","_","BoardContext","createContext","onCellClick","lastGuessed","Cell","content","className","displayContent","useContext","onClick","useCallback","filter","indicator","Row","refRow","cell","Board","game","useState","setCursorX","setCursorY","setCurrRange","setDirection","setLastGuessed","GameContext","onCellChanged","onOver","setBoardCursor","onKeydown","event","keypress","key","isOver","preventDefault","useEffect","document","addEventListener","removeEventListener","Provider","value","clueKey","decode","string","match","m","replaceAll","retval","decodeURIComponent","_decodeHelper","CluesList","highlighted","currCn","setCurrCn","cluesMap","id","currentClueIndices","refs","reduce","acc","createRef","scrollToClue","current","scrollIntoView","behavior","block","clueToScrollTo","ref","Gamebar","secs","setSecs","onPlayPause","isPlaying","togglePlay","timer","setInterval","s","clearInterval","style","marginRight","toString","padStart","display","b","App","setCrossword","setTitle","setCurrentClueIndices","setIsPlaying","setIsOver","Date","toLocaleDateString","month","date","year","slice","fetch","origin","then","res","text","xml2js","parseStringPromise","obj","window","curr","currentClueMapping","highlightDirection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8fda5287.chunk.js","sourcesContent":["function clueParsing(clues, index, width, height) {\n  const entry = clues[index][0].$;\n  const row = ((parseInt(entry.n) - 1) / width) >> 0;\n  const col = (parseInt(entry.n) - 1) % width;\n  entry.row = row;\n  entry.col = col;\n  return entry;\n}\nclass Crossword {\n  reference = [];\n  guesses = [];\n  clueMap = [];\n  width = 0;\n  height = 0;\n  cursorX = 0;\n  cursorY = 0;\n  direction = 0; // 0 for horizontal, 1 for vert\n  cluesDown = {};\n  cluesAcross = {};\n  corrects = 0;\n  total = 0;\n  title = \"\";\n  constructor(data) {\n    data = data.crossword;\n    this.title = data.Title[0].$.v;\n    this.width = parseInt(data.Width[0].$.v || 0);\n    this.height = parseInt(data.Height[0].$.v || 0);\n\n    const parsedAcross = Object.keys(data.across[0]).map((a) =>\n      clueParsing(data.across[0], a, this.width, this.height)\n    );\n    const parsedDown = Object.keys(data.down[0]).map((a) =>\n      clueParsing(data.down[0], a, this.width, this.height)\n    );\n    parsedDown.forEach((clue) => {\n      this.cluesDown[clue.cn] = clue;\n    });\n    parsedAcross.forEach((clue) => {\n      this.cluesAcross[clue.cn] = clue;\n    });\n    for (let i = 0; i < this.height; i++) {\n      const row = [];\n      for (let j = 0; j < this.width; j++) {\n        row.push(null);\n      }\n      this.guesses.push([...row]);\n      this.reference.push([...row]);\n      this.clueMap.push([...row]);\n    }\n\n    // TODO: this is to initialize the board in case [0,0] is empty\n    let start = { row: parsedAcross[0].row, col: parsedAcross[0].col };\n    this.cursorX = start.col;\n    this.cursorY = start.row;\n\n    for (let i = 0; i < parsedAcross.length; i++) {\n      const entry = parsedAcross[i];\n      const { row, col } = entry;\n      for (let c = 0; c < entry.a.length; c++) {\n        this.reference[row][col + c] = entry.a[c];\n        this.clueMap[row][col + c] = {\n          across: {\n            index: entry.cn,\n            isStart: c === 0,\n          },\n        };\n        this.guesses[row][col + c] = \"\";\n        this.total++;\n      }\n    }\n    parsedDown.forEach((entry) => {\n      for (let r = 0; r < entry.a.length; r++) {\n        this.clueMap[entry.row + r][entry.col].down = {\n          index: entry.cn,\n          isStart: r === 0,\n        };\n      }\n    });\n  }\n\n  setCursor(x, y) {\n    if (x < this.width && x >= 0 && y < this.height && y >= 0) {\n      this.cursorX = x;\n      this.cursorY = y;\n    }\n    return {\n      x: this.cursorX,\n      y: this.cursorY,\n    };\n  }\n\n  _movement(inner) {\n    let newX = this.cursorX;\n    let newY = this.cursorY;\n    do {\n      const { x, y } = inner(newX, newY);\n      newX = x;\n      newY = y;\n    } while (\n      newX < this.width &&\n      newY < this.height &&\n      newX >= 0 &&\n      newY >= 0 &&\n      this.reference[newY][newX] === null\n    );\n    return this.setCursor(newX, newY);\n  }\n\n  right() {\n    return this._movement((x, y) => ({ x: x + 1, y }));\n  }\n  down() {\n    return this._movement((x, y) => ({ x, y: y + 1 }));\n  }\n  up() {\n    return this._movement((x, y) => ({ x, y: y - 1 }));\n  }\n  left() {\n    return this._movement((x, y) => ({ x: x - 1, y }));\n  }\n\n  step() {\n    if (this.direction === 0) {\n      return this.right();\n    } else if (this.direction === 1) {\n      return this.down();\n    }\n  }\n  prev() {\n    if (this.direction === 0) {\n      return this.left();\n    } else if (this.direction === 1) {\n      return this.up();\n    }\n  }\n\n  _isWordCompleted(clue, direction) {\n    for (let i = 0; i < clue.a.length; i++) {\n      const y = clue.row + (direction === 1 ? i : 0);\n      const x = clue.col + (direction === 0 ? i : 0);\n      if (this.guesses[y][x] !== this.reference[y][x]) {\n        return {\n          isComplete: false,\n          x,\n          y,\n        };\n      }\n    }\n    return {\n      isComplete: true,\n    };\n  }\n\n  // goes to the the next word with empty slot\n  _nextWord(inc = 1) {\n    const currClue = this.currentClue();\n    const clues = this.direction === 0 ? this.cluesAcross : this.cluesDown;\n    const indices = Object.keys(clues);\n    let currClueIndex = indices.findIndex((cn) => cn === currClue.cn);\n    while (currClueIndex + inc < indices.length && currClueIndex + inc >= 0) {\n      const nextClue = clues[indices[currClueIndex + inc]];\n      const completion = this._isWordCompleted(nextClue, this.direction);\n      if (completion.isComplete) {\n        currClueIndex += inc;\n      } else {\n        return this.setCursor(completion.x, completion.y);\n      }\n    }\n    let nextClue = clues[indices[currClueIndex]];\n    if (nextClue === currClue) {\n      this.changeDirection();\n      nextClue = inc > 0 ? this.firstClue() : this.lastClue();\n      this.setCursor(nextClue.col, nextClue.row);\n      const completion = this._isWordCompleted(nextClue, this.direction);\n      if (completion.isComplete) {\n        return this._nextWord(inc);\n      } else {\n        return this.setCursor(completion.x, completion.y);\n      }\n    }\n\n    return this.setCursor(nextClue.col, nextClue.row);\n  }\n  nextWord() {\n    return this._nextWord(1);\n  }\n  prevWord() {\n    return this._nextWord(-1);\n  }\n  isBeginningOfWord() {\n    const currClue = this.currentClue();\n    return this.cursorX === currClue.col && this.cursorY === currClue.row;\n  }\n  changeDirection() {\n    this.direction = (this.direction + 1) % 2;\n  }\n  _updateGuess(char) {\n    if (\n      this.guesses[this.cursorY][this.cursorX] ===\n      this.reference[this.cursorY][this.cursorX]\n    ) {\n      this.corrects--;\n    }\n    this.guesses[this.cursorY][this.cursorX] = char;\n    if (\n      this.guesses[this.cursorY][this.cursorX] ===\n      this.reference[this.cursorY][this.cursorX]\n    ) {\n      this.corrects++;\n    }\n  }\n  keypress(char, shiftKey) {\n    char = char.toUpperCase();\n    const isAlpha = /[A-Z]/.test(char);\n\n    if (char === \"ARROWRIGHT\") {\n      this.right();\n    } else if (char === \"ARROWDOWN\") {\n      this.down();\n    } else if (char === \"ARROWLEFT\") {\n      this.left();\n    } else if (char === \"ARROWUP\") {\n      this.up();\n    } else if (char === \"ENTER\") {\n      this.changeDirection();\n    } else if (char === \"TAB\") {\n      if (shiftKey) {\n        this.prevWord();\n      } else {\n        this.nextWord();\n      }\n    } else if (char === \"BACKSPACE\") {\n      this._updateGuess(\" \");\n      if (!this.isBeginningOfWord()) {\n        this.prev();\n      }\n    } else if (isAlpha && char.length === 1) {\n      this._updateGuess(char);\n      if (char === this.reference[this.cursorY][this.cursorX]) {\n        const currRange = this.currentWordRange();\n        const currCharPos = currRange[currRange.length - 1];\n        const isEnd =\n          currCharPos[0] === this.cursorX && currCharPos[1] === this.cursorY;\n        if (isEnd) {\n          this.nextWord();\n        } else {\n          this.step();\n        }\n      }\n    } else if (char === \" \") {\n      this.changeDirection();\n    }\n    return {\n      x: this.cursorX,\n      y: this.cursorY,\n    };\n  }\n\n  currentClue() {\n    const x = this.cursorX;\n    const y = this.cursorY;\n    let clue = null;\n    const mapping = this.clueMap[y][x];\n    if (this.direction === 0) {\n      clue = this.cluesAcross[mapping.across.index];\n    } else if (this.direction === 1) {\n      clue = this.cluesDown[mapping.down.index];\n    }\n    return clue;\n  }\n\n  firstClue() {\n    if (this.direction === 0) {\n      const firstKey = Object.keys(this.cluesAcross)[0];\n      return this.cluesAcross[firstKey];\n    } else if (this.direction === 1) {\n      const firstKey = Object.keys(this.cluesDown)[0];\n      return this.cluesDown[firstKey];\n    }\n  }\n  lastClue() {\n    if (this.direction === 0) {\n      const lastKey = Object.keys(this.cluesAcross)[\n        Object.keys(this.cluesAcross).length - 1\n      ];\n      return this.cluesAcross[lastKey];\n    } else if (this.direction === 1) {\n      const lastKey = Object.keys(this.cluesDown)[\n        Object.keys(this.cluesDown).length - 1\n      ];\n      return this.cluesDown[lastKey];\n    }\n  }\n\n  currentWordRange() {\n    const clue = this.currentClue();\n    if (this.direction === 0) {\n      return clue.a.split(\"\").map((_, i) => [clue.col + i, clue.row]);\n    } else if (this.direction === 1) {\n      return clue.a.split(\"\").map((_, i) => [clue.col, clue.row + i]);\n    }\n  }\n\n  currentClueMapping() {\n    const x = this.cursorX;\n    const y = this.cursorY;\n    const mapping = this.clueMap[y][x];\n    return mapping;\n  }\n\n  isOver() {\n    return this.total === this.corrects;\n  }\n}\n\nexport default Crossword;\n","import React, {\n  useState,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n} from \"react\";\n\nimport { GameContext } from \"./App\";\n\nconst BoardContext = createContext({\n  cursorX: 0,\n  cursorY: 0,\n  currRange: [],\n  direction: 0,\n  onCellClick: (x, y) => {},\n  lastGuessed: \"\",\n  clueMap: {},\n});\n\nconst Cell = ({ content, reference, x, y }) => {\n  let className = \"cell\";\n  let displayContent = content;\n  const { onCellClick, cursorX, cursorY, clueMap, currRange } = useContext(\n    BoardContext\n  );\n  const onClick = useCallback(() => {\n    if (content !== null) {\n      onCellClick(x, y);\n    }\n  }, [onCellClick, x, y, content]);\n\n  if (content === null) {\n    className += \" blank\";\n    displayContent = \"\\xa0\";\n  }\n\n  if (x === cursorX && y === cursorY) {\n    className += \" selected\";\n  }\n\n  if (content !== \"\" && content !== null && content !== reference) {\n    className += \" incorrect\";\n  }\n\n  if (currRange.filter((r) => r[0] === x && r[1] === y).length > 0) {\n    className += \" in-range\";\n  }\n\n  let indicator = null;\n  if (clueMap[y][x] && clueMap[y][x].across.isStart) {\n    indicator = <span className=\"indicator\">{clueMap[y][x].across.index}</span>;\n  } else if (clueMap[y][x] && clueMap[y][x].down.isStart) {\n    indicator = <span className=\"indicator\">{clueMap[y][x].down.index}</span>;\n  }\n\n  return (\n    <span className={className} onClick={onClick}>\n      {indicator}\n      {displayContent}\n    </span>\n  );\n};\n\nconst Row = ({ row, refRow, y }) => {\n  return (\n    <div>\n      {row.map((cell, c) => (\n        <Cell\n          key={`${row}:${c}`}\n          content={cell}\n          reference={refRow[c]}\n          x={c}\n          y={y}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst Board = ({ game }) => {\n  const [cursorX, setCursorX] = useState(0);\n  const [cursorY, setCursorY] = useState(0);\n  const [currRange, setCurrRange] = useState([]);\n  const [direction, setDirection] = useState(0);\n  const [lastGuessed, setLastGuessed] = useState(null);\n  const { onCellChanged, onOver } = useContext(GameContext);\n  const setBoardCursor = useCallback(\n    (game) => {\n      setCursorX(game.cursorX);\n      setCursorY(game.cursorY);\n      setCurrRange(game.currentWordRange());\n      setDirection(game.direction);\n      onCellChanged();\n    },\n    [onCellChanged]\n  );\n  const onCellClick = useCallback(\n    (newX, newY) => {\n      if (game.cursorX === newX && game.cursorY === newY) {\n        game.changeDirection();\n      }\n      game.setCursor(newX, newY);\n      setBoardCursor(game);\n    },\n    [game, setBoardCursor]\n  );\n  const onKeydown = useCallback(\n    (event) => {\n      game.keypress(event.key, event.shiftKey);\n      setLastGuessed(`${game.cursorX}:${game.cursorY}:${event.key}`);\n      setBoardCursor(game);\n      if (game.isOver()) {\n        onOver();\n      }\n      event.preventDefault();\n      return false;\n    },\n    [game, setBoardCursor, onOver]\n  );\n  useEffect(() => {\n    setBoardCursor(game);\n  }, [game, setBoardCursor]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", onKeydown);\n    return () => {\n      document.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, [onKeydown]);\n  return (\n    <div className=\"board\">\n      <BoardContext.Provider\n        value={{\n          cursorX,\n          cursorY,\n          currRange,\n          direction,\n          onCellClick,\n          lastGuessed,\n          clueMap: game.clueMap,\n        }}\n      >\n        {game.guesses.map((row, r) => {\n          return <Row row={row} refRow={game.reference[r]} key={r} y={r} />;\n        })}\n      </BoardContext.Provider>\n    </div>\n  );\n};\n\nexport default Board;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  createRef,\n} from \"react\";\nimport { GameContext } from \"./App\";\n\nfunction clueKey(cn, direction) {\n  return `clue-${direction}-${cn}`;\n}\n\nfunction _decodeHelper(string) {\n  let retval = \"\";\n  try {\n    retval = decodeURIComponent(string);\n  } finally {\n    return retval;\n  }\n}\n\nfunction decode(string) {\n  const matches = string.match(/%[0-9a-zA-Z][0-9a-zA-Z]/g) || [];\n  matches.forEach((m) => {\n    string = string.replaceAll(m, _decodeHelper(m));\n  });\n  return string;\n}\n\nconst CluesList = ({ game, direction, highlighted }) => {\n  const [currCn, setCurrCn] = useState(0);\n\n  const cluesMap = direction === 0 ? game.cluesAcross : game.cluesDown;\n  const clues = Object.keys(cluesMap).map((id) => cluesMap[id]);\n  const { currentClueIndices } = useContext(GameContext);\n\n  const refs = clues.reduce((acc, clue) => {\n    acc[clueKey(clue.cn, direction)] = createRef();\n    return acc;\n  }, {});\n\n  const scrollToClue = useCallback(\n    (id) => {\n      if (!refs[id]) {\n        return;\n      }\n\n      refs[id].current.scrollIntoView({\n        behavior: \"auto\",\n        block: \"center\",\n      });\n    },\n    [refs]\n  );\n\n  useEffect(() => {\n    let retval = \"\";\n    if (direction === 0) {\n      retval = currentClueIndices.across;\n    } else {\n      retval = currentClueIndices.down;\n    }\n    setCurrCn(retval);\n    const clueToScrollTo = clueKey(retval, direction);\n    scrollToClue(clueToScrollTo);\n  }, [currentClueIndices, direction, scrollToClue]);\n\n  const className = useCallback(\n    (clue) => {\n      if (clue.cn === currCn) {\n        return highlighted ? \"selected highlighted\" : \"selected\";\n      }\n      return null;\n    },\n    [currCn, highlighted]\n  );\n\n  return (\n    <div>\n      <h2>{direction === 0 ? \"Across\" : \"Down\"}</h2>\n      <div className=\"clue-list\" key={`clues-list-${direction}`}>\n        {clues.map((clue) => (\n          <div\n            key={clueKey(clue.cn, direction)}\n            ref={refs[clueKey(clue.cn, direction)]}\n            className={className(clue, highlighted)}\n          >\n            <span>{clue.cn}.&nbsp;</span>\n            {decode(clue.c)}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CluesList;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { GameContext } from \"./App\";\n\nconst Gamebar = () => {\n  const [secs, setSecs] = useState(0);\n  const { onPlayPause, isPlaying, title } = useContext(GameContext);\n  const togglePlay = () => {\n    onPlayPause(!isPlaying);\n  };\n\n  useEffect(() => {\n    if (!isPlaying) {\n      return;\n    }\n    const timer = setInterval(() => {\n      setSecs((s) => s + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [isPlaying, title]);\n  return (\n    <div className=\"gamebar\">\n      {!isPlaying && (\n        <span onClick={togglePlay} className=\"button item\">\n          <i className=\"fa fa-play\" style={{ marginRight: 5 }}></i>\n          Resume\n        </span>\n      )}\n      {isPlaying && (\n        <span onClick={togglePlay} className=\"button item\">\n          <i className=\"fa fa-pause\" style={{ marginRight: 5 }}></i>\n          Pause\n        </span>\n      )}\n      <span className=\"item\">\n        {((secs / 60) >> 0).toString().padStart(2, \"0\")}:\n        {(secs % 60).toString().padStart(2, \"0\")}\n      </span>\n      <span className=\"item\">\n        <h1 style={{ display: \"inline\" }}>{title}</h1>\n      </span>\n    </div>\n  );\n};\n\nexport default Gamebar;\n","import \"./App.css\";\nimport React, { useEffect, useState, createContext, useCallback } from \"react\";\nimport xml2js from \"xml2js\";\n\nimport Crossword from \"./crossword\";\nimport Board from \"./Board\";\nimport CluesList from \"./CluesList\";\nimport Gamebar from \"./Gamebar\";\n\nconst corsAnywhere = \"https://cors-anywhere.herokuapp.com/\";\n\nexport const GameContext = createContext({\n  currentClueIndices: {},\n  isPlaying: true,\n  title: \"\",\n  onCellChanged: () => {},\n  onPlayPause: (b) => {},\n  onOver: () => {},\n});\n\nfunction App() {\n  const [crossword, setCrossword] = useState();\n  const [title, setTitle] = useState();\n  const [currentClueIndices, setCurrentClueIndices] = useState({});\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [isOver, setIsOver] = useState(false);\n  useEffect(() => {\n    let [month, date, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n    month = month.padStart(2, \"0\");\n    date = date.padStart(2, \"0\");\n    year = year.slice(2, 4);\n    fetch(\n      `${corsAnywhere}http://picayune.uclick.com/comics/usaon/data/usaon${year}${month}${date}-data.xml`,\n      {\n        origin: \"http://example.com\",\n      }\n    )\n      .then((res) => res.text())\n      .then((text) => xml2js.parseStringPromise(text))\n      .then((obj) => {\n        const game = new Crossword(obj);\n        window.game = game;\n        setCrossword(game);\n        setTitle(game.title);\n      });\n  }, []);\n\n  const onCellChanged = useCallback(() => {\n    if (!crossword) {\n      return;\n    }\n    const curr = crossword.currentClueMapping();\n    setCurrentClueIndices({\n      across: curr.across.index,\n      down: curr.down.index,\n      highlightDirection: crossword.direction,\n    });\n  }, [crossword]);\n\n  const onPlayPause = (isPlaying) => {\n    setIsPlaying(isPlaying);\n  };\n\n  const onOver = () => {\n    onPlayPause(false);\n    setIsOver(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {crossword && (\n        <div>\n          <GameContext.Provider\n            value={{\n              currentClueIndices,\n              isPlaying,\n              title,\n              onCellChanged,\n              onPlayPause,\n              onOver,\n            }}\n          >\n            <Gamebar />\n            <div\n              className={`game-container ${isPlaying ? \"playing\" : \"paused\"}`}\n            >\n              <div className={`game-area`}>\n                <Board game={crossword} />\n                <div className=\"clues-area\">\n                  <CluesList\n                    direction={0}\n                    highlighted={currentClueIndices.highlightDirection === 0}\n                    game={crossword}\n                  />\n                  <CluesList\n                    direction={1}\n                    highlighted={currentClueIndices.highlightDirection === 1}\n                    game={crossword}\n                  />\n                </div>\n              </div>\n              <div className=\"veil\">{isOver && <div>Congrats!</div>}</div>\n            </div>\n          </GameContext.Provider>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}